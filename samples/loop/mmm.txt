Report of mmm:
  Function: 4
  Number of statement hoisted: 60
  13: mul i$1 24
  15: add m1_base#-96 FP
  17: add (11) (11)
  11: add m1_base#-96 FP
  13: add (5) (5)
  46: add m2_base#-192 FP
  49: mul i$4 8
  52: mul i$4 24
  54: add m1_base#-96 FP
  56: add (45) (45)
  42: add m2_base#-192 FP
  46: add m1_base#-96 FP
  48: add (38) (38)
  81: mul i$7 32
  83: add m2_base#-192 FP
  85: add (79) (79)
  79: add m2_base#-192 FP
  81: add (73) (73)
  109: mul i$10 24
  111: add m3_base#-264 FP
  113: add (107) (107)
  107: add m3_base#-264 FP
  109: add (101) (101)
  142: mul i$13 24
  144: add m3_base#-264 FP
  146: add (140) (140)
  148: mul j$18 8
  150: add (142) (142)
  152: mul i$13 24
  154: add m3_base#-264 FP
  156: add (145) (145)
  158: mul j$18 8
  160: add (147) (147)
  163: add m1_base#-96 FP
  166: mul j$18 8
  169: mul i$13 32
  171: add m2_base#-192 FP
  173: add (152) (152)
  139: mul i$13 24
  141: add m3_base#-264 FP
  143: add (135) (135)
  147: mul i$13 24
  149: add m3_base#-264 FP
  151: add (138) (138)
  155: add m1_base#-96 FP
  158: mul i$13 32
  160: add m2_base#-192 FP
  162: add (142) (142)
  135: add m3_base#-264 FP
  137: add (128) (128)
  140: add m3_base#-264 FP
  142: add (130) (130)
  144: add m1_base#-96 FP
  147: add m2_base#-192 FP
  149: add (133) (133)
  218: mul i$16 24
  220: add m3_base#-264 FP
  222: add (216) (216)
  216: add m3_base#-264 FP
  218: add (210) (210)

(ENTRY) Function #0:
#parameters = 0
#local_vars = 0

(ENTRY) Block #0:
  instr 4: move 0 i$0

Block #1:
  instr 5: add m1_base#-96 FP
  instr 6: add (5) (5)

Block #2:
  instr 7: i$1 <- phi i$0 i$2 [0] [7]
  instr 8: j$0 <- phi j$-1 j$2 [0] [7]
  instr 9: cmplt i$1 4
  instr 10: blbc (9) [9]

Block #3:
  instr 11: move 0 j$1

Block #4:
  instr 12: mul i$1 24
  instr 13: nop
  instr 14: nop

Block #5:
  instr 15: j$2 <- phi j$1 j$3 [3] [6]
  instr 16: cmplt j$2 3
  instr 17: blbc (16) [7]

Block #6:
  instr 18: nop
  instr 19: nop
  instr 20: nop
  instr 21: mul j$2 8
  instr 22: add (6) (21)
  instr 23: mul j$2 2
  instr 24: add i$1 (23)
  instr 25: store (24) (22)
  instr 26: mul j$2 2
  instr 27: add i$1 (26)
  instr 28: write (27)
  instr 29: add j$2 1
  instr 30: move (29) j$3
  instr 31: br [5]

Block #7:

Block #8:
  instr 32: wrl
  instr 33: add i$1 1
  instr 34: move (33) i$2
  instr 35: br [2]

Block #9:
  instr 36: move 0 i$3

Block #10:
  instr 37: add m2_base#-192 FP
  instr 38: add m1_base#-96 FP
  instr 39: add (38) (38)

Block #11:
  instr 40: i$4 <- phi i$3 i$5 [9] [16]
  instr 41: j$4 <- phi j$0 j$6 [9] [16]
  instr 42: cmplt i$4 4
  instr 43: blbc (42) [18]

Block #12:
  instr 44: move 0 j$5

Block #13:
  instr 45: nop
  instr 46: mul i$4 8
  instr 47: mul i$4 24
  instr 48: nop
  instr 49: nop

Block #14:
  instr 50: j$6 <- phi j$5 j$7 [12] [15]
  instr 51: cmplt j$6 3
  instr 52: blbc (51) [16]

Block #15:
  instr 53: mul j$6 32
  instr 54: nop
  instr 55: add (39) (53)
  instr 56: nop
  instr 57: add (55) (39)
  instr 58: nop
  instr 59: nop
  instr 60: nop
  instr 61: mul j$6 8
  instr 62: add (39) (61)
  instr 63: load (62)
  instr 64: store (63) (57)
  instr 65: add j$6 1
  instr 66: move (65) j$7
  instr 67: br [14]

Block #16:

Block #17:
  instr 68: add i$4 1
  instr 69: move (68) i$5
  instr 70: br [11]

Block #18:
  instr 71: wrl
  instr 72: move 0 i$6

Block #19:
  instr 73: add m2_base#-192 FP
  instr 74: add (73) (73)

Block #20:
  instr 75: i$7 <- phi i$6 i$8 [18] [25]
  instr 76: j$8 <- phi j$4 j$10 [18] [25]
  instr 77: cmplt i$7 3
  instr 78: blbc (77) [27]

Block #21:
  instr 79: move 0 j$9

Block #22:
  instr 80: mul i$7 32
  instr 81: nop
  instr 82: nop

Block #23:
  instr 83: j$10 <- phi j$9 j$11 [21] [24]
  instr 84: cmplt j$10 4
  instr 85: blbc (84) [25]

Block #24:
  instr 86: nop
  instr 87: nop
  instr 88: nop
  instr 89: mul j$10 8
  instr 90: add (74) (89)
  instr 91: load (90)
  instr 92: write (91)
  instr 93: add j$10 1
  instr 94: move (93) j$11
  instr 95: br [23]

Block #25:

Block #26:
  instr 96: wrl
  instr 97: add i$7 1
  instr 98: move (97) i$8
  instr 99: br [20]

Block #27:
  instr 100: move 0 i$9

Block #28:
  instr 101: add m3_base#-264 FP
  instr 102: add (101) (101)

Block #29:
  instr 103: i$10 <- phi i$9 i$11 [27] [34]
  instr 104: j$12 <- phi j$8 j$14 [27] [34]
  instr 105: cmplt i$10 3
  instr 106: blbc (105) [36]

Block #30:
  instr 107: move 0 j$13

Block #31:
  instr 108: mul i$10 24
  instr 109: nop
  instr 110: nop

Block #32:
  instr 111: j$14 <- phi j$13 j$15 [30] [33]
  instr 112: cmplt j$14 3
  instr 113: blbc (112) [34]

Block #33:
  instr 114: nop
  instr 115: nop
  instr 116: nop
  instr 117: mul j$14 8
  instr 118: add (102) (117)
  instr 119: store 0 (118)
  instr 120: add j$14 1
  instr 121: move (120) j$15
  instr 122: br [32]

Block #34:

Block #35:
  instr 123: add i$10 1
  instr 124: move (123) i$11
  instr 125: br [29]

Block #36:
  instr 126: wrl
  instr 127: move 0 i$12

Block #37:
  instr 128: add m3_base#-264 FP
  instr 129: add (128) (128)
  instr 130: add m3_base#-264 FP
  instr 131: add (130) (130)
  instr 132: add m1_base#-96 FP
  instr 133: add m2_base#-192 FP
  instr 134: add (133) (133)

Block #38:
  instr 135: i$13 <- phi i$12 i$14 [36] [45]
  instr 136: j$16 <- phi j$12 j$18 [36] [45]
  instr 137: k$0 <- phi k$-1 k$1 [36] [45]
  instr 138: cmplt i$13 3
  instr 139: blbc (138) [46]

Block #39:
  instr 140: move 0 j$17
  instr 141: mul i$13 24
  instr 142: nop
  instr 143: nop
  instr 144: mul i$13 24
  instr 145: nop
  instr 146: nop
  instr 147: nop
  instr 148: mul i$13 32
  instr 149: nop
  instr 150: nop

Block #40:
  instr 151: j$18 <- phi j$17 j$19 [39] [44]
  instr 152: k$1 <- phi k$0 k$3 [39] [44]
  instr 153: cmplt j$18 3
  instr 154: blbc (153) [45]

Block #41:
  instr 155: move 0 k$2
  instr 156: nop
  instr 157: nop
  instr 158: nop
  instr 159: mul j$18 8
  instr 160: add (159) (159)
  instr 161: nop
  instr 162: nop
  instr 163: nop
  instr 164: mul j$18 8
  instr 165: add (164) (164)
  instr 166: nop
  instr 167: mul j$18 8
  instr 168: nop
  instr 169: nop
  instr 170: nop

Block #42:
  instr 171: k$3 <- phi k$2 k$4 [41] [43]
  instr 172: cmplt k$3 4
  instr 173: blbc (172) [44]

Block #43:
  instr 174: nop
  instr 175: nop
  instr 176: nop
  instr 177: nop
  instr 178: nop
  instr 179: nop
  instr 180: nop
  instr 181: nop
  instr 182: nop
  instr 183: nop
  instr 184: mul k$3 24
  instr 185: nop
  instr 186: add (134) (184)
  instr 187: nop
  instr 188: add (186) (134)
  instr 189: nop
  instr 190: nop
  instr 191: nop
  instr 192: mul k$3 8
  instr 193: add (134) (192)
  instr 194: load (188)
  instr 195: load (193)
  instr 196: mul (194) (195)
  instr 197: load (183)
  instr 198: add (197) (196)
  instr 199: store (198) (134)
  instr 200: add k$3 1
  instr 201: move (200) k$4
  instr 202: br [42]

Block #44:
  instr 203: add j$18 1
  instr 204: move (203) j$19
  instr 205: br [40]

Block #45:
  instr 206: add i$13 1
  instr 207: move (206) i$14
  instr 208: br [38]

Block #46:
  instr 209: move 0 i$15
  instr 210: add m3_base#-264 FP
  instr 211: add (210) (210)

Block #47:
  instr 212: i$16 <- phi i$15 i$17 [46] [51]
  instr 213: j$20 <- phi j$16 j$22 [46] [51]
  instr 214: cmplt i$16 3
  instr 215: blbc (214) [52]

Block #48:
  instr 216: move 0 j$21
  instr 217: mul i$16 24
  instr 218: nop
  instr 219: nop

Block #49:
  instr 220: j$22 <- phi j$21 j$23 [48] [50]
  instr 221: cmplt j$22 3
  instr 222: blbc (221) [51]

Block #50:
  instr 223: nop
  instr 224: nop
  instr 225: nop
  instr 226: mul j$22 8
  instr 227: add (211) (226)
  instr 228: load (227)
  instr 229: write (228)
  instr 230: add j$22 1
  instr 231: move (230) j$23
  instr 232: br [49]

Block #51:
  instr 233: wrl
  instr 234: add i$16 1
  instr 235: move (234) i$17
  instr 236: br [47]

Block #52:
  instr 237: ret


