(ENTRY) Function #0:
#parameters = 0
#local_vars = 0

(ENTRY) Block #0:
  instr 4: mul 0 8
  instr 5: add prime_base#29568 GP
  instr 6: add (5) (4)
  instr 7: store 2 (6)
  instr 8: mul 0 8
  instr 9: add prime_base#29568 GP
  instr 10: add (9) (8)
  instr 11: load (10)
  instr 12: write (11)
  instr 13: move 1 i$0
  instr 14: move 3 v$0
  instr 15: move i$0 i$1
  instr 16: move v$0 v$1

Block #1:
  instr 15: nop
  instr 16: nop
  instr 17: nop
  instr 18: cmplt i$1 400
  instr 19: blbc (18) [12]

Block #2:
  instr 20: move 0 j$1
  instr 21: move j$1 j$2

Block #3:
  instr 21: nop
  instr 22: cmplt j$2 i$1
  instr 23: blbc (22) [9]

Block #4:
  instr 24: mul j$2 8
  instr 25: add prime_base#29568 GP
  instr 26: add (25) (24)
  instr 27: mul j$2 8
  instr 28: add prime_base#29568 GP
  instr 29: add (28) (27)
  instr 30: load (26)
  instr 31: load (29)
  instr 32: mul (30) (31)
  instr 33: cmple (32) v$1
  instr 34: blbs (33) [6]

Block #5:
  instr 35: sub i$1 1
  instr 36: move (35) j$3
  instr 37: move j$3 j$5
  instr 38: br [8]

Block #6:
  instr 38: mul j$2 8
  instr 39: add prime_base#29568 GP
  instr 40: add (39) (38)
  instr 41: load (40)
  instr 42: mod v$1 (41)
  instr 43: cmpeq (42) 0
  instr 44: move j$2 j$5
  instr 45: blbc (43) [8]

Block #7:
  instr 45: move i$1 j$4
  instr 46: move j$4 j$5

Block #8:
  instr 46: nop
  instr 47: add j$5 1
  instr 48: move (47) j$6
  instr 49: move j$6 j$2
  instr 50: br [3]

Block #9:
  instr 50: cmpeq j$2 i$1
  instr 51: move i$1 i$3
  instr 52: blbc (50) [11]

Block #10:
  instr 52: mul i$1 8
  instr 53: add prime_base#29568 GP
  instr 54: add (53) (52)
  instr 55: store v$1 (54)
  instr 56: write v$1
  instr 57: add i$1 1
  instr 58: move (57) i$2
  instr 59: move i$2 i$3

Block #11:
  instr 59: nop
  instr 60: add v$1 2
  instr 61: move (60) v$2
  instr 62: move i$3 i$1
  instr 63: move j$2 j$0
  instr 64: move v$2 v$1
  instr 65: br [1]

Block #12:
  instr 63: wrl
  instr 64: ret


