Function #0:
#parameters = 1
#local_vars = 0

(ENTRY) Block #0:
  instr 3: cmpeq n#16 0
  instr 4: blbc (3) [2]

Block #1:
  instr 5: add res_base#32720 GP
  instr 6: store 1 (5)
  instr 7: br [3]

Block #2:
  instr 8: sub n#16 1
  instr 9: param (8)
  instr 10: call [0]
  instr 11: add res_base#32720 GP
  instr 12: load (11)
  instr 13: mul n#16 (12)
  instr 14: add res_base#32720 GP
  instr 15: store (13) (14)

Block #3:
  instr 16: ret


Function #1:
#parameters = 1
#local_vars = 2

(ENTRY) Block #0:
  instr 17: cmple n#16 1
  instr 18: blbc (17) [2]

Block #1:
  instr 19: add res_base#32720 GP
  instr 20: store 1 (19)
  instr 21: br [3]

Block #2:
  instr 22: sub n#16 1
  instr 23: param (22)
  instr 24: call [1]
  instr 25: add res_base#32720 GP
  instr 26: load (25)
  instr 27: move (26) x0#-8
  instr 28: sub n#16 2
  instr 29: param (28)
  instr 30: call [1]
  instr 31: add res_base#32720 GP
  instr 32: load (31)
  instr 33: move (32) y0#-16
  instr 34: add x0#-8 y0#-16
  instr 35: add res_base#32720 GP
  instr 36: store (34) (35)
  instr 37: move x0#-8 x0#-8
  instr 38: move y0#-16 y0#-16

Block #3:
  instr 39: nop
  instr 40: nop
  instr 41: ret


Function #2:
#parameters = 2
#local_vars = 0

(ENTRY) Block #0:
  instr 42: write from#24
  instr 43: write to#16
  instr 44: wrl
  instr 45: add count_base#32728 GP
  instr 46: load (45)
  instr 47: add (46) 1
  instr 48: add count_base#32728 GP
  instr 49: store (47) (48)
  instr 50: ret


Function #3:
#parameters = 4
#local_vars = 0

(ENTRY) Block #0:
  instr 51: cmpeq height#16 1
  instr 52: blbc (51) [2]

Block #1:
  instr 53: param from#40
  instr 54: param to#24
  instr 55: call [2]
  instr 56: br [3]

Block #2:
  instr 57: param from#40
  instr 58: param to#24
  instr 59: param by#32
  instr 60: sub height#16 1
  instr 61: param (60)
  instr 62: call [3]
  instr 63: param from#40
  instr 64: param to#24
  instr 65: call [2]
  instr 66: param by#32
  instr 67: param from#40
  instr 68: param to#24
  instr 69: sub height#16 1
  instr 70: param (69)
  instr 71: call [3]

Block #3:
  instr 72: ret


Function #4:
#parameters = 1
#local_vars = 0

(ENTRY) Block #0:
  instr 73: add count_base#32728 GP
  instr 74: store 0 (73)
  instr 75: param 1
  instr 76: param 2
  instr 77: param 3
  instr 78: param height#16
  instr 79: call [3]
  instr 80: wrl
  instr 81: add count_base#32728 GP
  instr 82: load (81)
  instr 83: write (82)
  instr 84: wrl
  instr 85: ret


(ENTRY) Function #5:
#parameters = 0
#local_vars = 0

(ENTRY) Block #0:
  instr 86: add a_base#32760 GP
  instr 87: store 16807 (86)
  instr 88: add m_base#32752 GP
  instr 89: store 127 (88)
  instr 90: add m_base#32752 GP
  instr 91: load (90)
  instr 92: mul (91) 256
  instr 93: add (92) 255
  instr 94: add m_base#32752 GP
  instr 95: store (93) (94)
  instr 96: add m_base#32752 GP
  instr 97: load (96)
  instr 98: mul (97) 256
  instr 99: add (98) 255
  instr 100: add m_base#32752 GP
  instr 101: store (99) (100)
  instr 102: add m_base#32752 GP
  instr 103: load (102)
  instr 104: mul (103) 256
  instr 105: add (104) 255
  instr 106: add m_base#32752 GP
  instr 107: store (105) (106)
  instr 108: add m_base#32752 GP
  instr 109: load (108)
  instr 110: add a_base#32760 GP
  instr 111: load (110)
  instr 112: div (109) (111)
  instr 113: add q_base#32744 GP
  instr 114: store (112) (113)
  instr 115: add m_base#32752 GP
  instr 116: load (115)
  instr 117: add a_base#32760 GP
  instr 118: load (117)
  instr 119: mod (116) (118)
  instr 120: add r_base#32736 GP
  instr 121: store (119) (120)
  instr 122: param 7
  instr 123: call [0]
  instr 124: add res_base#32720 GP
  instr 125: load (124)
  instr 126: write (125)
  instr 127: wrl
  instr 128: wrl
  instr 129: param 11
  instr 130: call [1]
  instr 131: add res_base#32720 GP
  instr 132: load (131)
  instr 133: write (132)
  instr 134: wrl
  instr 135: wrl
  instr 136: param 3
  instr 137: call [4]
  instr 138: wrl
  instr 139: ret


